/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dbs.clconnbc.api.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AdditionalNameRequestAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4301917693722148055L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AdditionalNameRequestAvro\",\"namespace\":\"com.dbs.clconnbc.api.model\",\"fields\":[{\"name\":\"caseId\",\"type\":\"string\"},{\"name\":\"personId\",\"type\":\"string\"},{\"name\":\"correlationId\",\"type\":\"string\"},{\"name\":\"originator\",\"type\":\"string\"},{\"name\":\"rmLocation\",\"type\":\"string\"},{\"name\":\"bookingCentre\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"familyBackground\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"remarks\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"additionalRelatedNames\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"AKANames\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"aliazingNames\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"SOW\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SOWAvro\",\"fields\":[{\"name\":\"employment\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EmploymentAvro\",\"fields\":[{\"name\":\"employerName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pleaseElaborateOnSourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null}]}},\"default\":[]},{\"name\":\"business\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BusinessAvro\",\"fields\":[{\"name\":\"businessName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"elaborateOnClientBusiness\",\"type\":[\"null\",\"string\"],\"default\":null}]}},\"default\":[]},{\"name\":\"investment\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"InvestmentAvro\",\"fields\":[{\"name\":\"investmentType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pleaseElaborateOnSourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null}]}},\"default\":[]},{\"name\":\"property\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PropertyAvro\",\"fields\":[{\"name\":\"propertyType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pleaseElaborateOnSourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null}]}},\"default\":[]},{\"name\":\"inheritance\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"InheritanceAvro\",\"fields\":[{\"name\":\"giftorName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sourceOfWealthOfGiftor\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pleaseElaborateOnSourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null}]}},\"default\":[]},{\"name\":\"otherSOW\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OtherSOWAvro\",\"fields\":[{\"name\":\"pleaseElaborateOnSourceOfWealth\",\"type\":[\"null\",\"string\"],\"default\":null}]}},\"default\":[]}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AdditionalNameRequestAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AdditionalNameRequestAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AdditionalNameRequestAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AdditionalNameRequestAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AdditionalNameRequestAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AdditionalNameRequestAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AdditionalNameRequestAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AdditionalNameRequestAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AdditionalNameRequestAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private CharSequence caseId;
  private CharSequence personId;
  private CharSequence correlationId;
  private CharSequence originator;
  private CharSequence rmLocation;
  private CharSequence bookingCentre;
  private CharSequence name;
  private CharSequence familyBackground;
  private java.util.List<CharSequence> remarks;
  private java.util.List<CharSequence> additionalRelatedNames;
  private CharSequence AKANames;
  private CharSequence aliazingNames;
  private SOWAvro SOW;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AdditionalNameRequestAvro() {}

  /**
   * All-args constructor.
   * @param caseId The new value for caseId
   * @param personId The new value for personId
   * @param correlationId The new value for correlationId
   * @param originator The new value for originator
   * @param rmLocation The new value for rmLocation
   * @param bookingCentre The new value for bookingCentre
   * @param name The new value for name
   * @param familyBackground The new value for familyBackground
   * @param remarks The new value for remarks
   * @param additionalRelatedNames The new value for additionalRelatedNames
   * @param AKANames The new value for AKANames
   * @param aliazingNames The new value for aliazingNames
   * @param SOW The new value for SOW
   */
  public AdditionalNameRequestAvro(CharSequence caseId, CharSequence personId, CharSequence correlationId, CharSequence originator, CharSequence rmLocation, CharSequence bookingCentre, CharSequence name, CharSequence familyBackground, java.util.List<CharSequence> remarks, java.util.List<CharSequence> additionalRelatedNames, CharSequence AKANames, CharSequence aliazingNames, SOWAvro SOW) {
    this.caseId = caseId;
    this.personId = personId;
    this.correlationId = correlationId;
    this.originator = originator;
    this.rmLocation = rmLocation;
    this.bookingCentre = bookingCentre;
    this.name = name;
    this.familyBackground = familyBackground;
    this.remarks = remarks;
    this.additionalRelatedNames = additionalRelatedNames;
    this.AKANames = AKANames;
    this.aliazingNames = aliazingNames;
    this.SOW = SOW;
  }

  @Override
  public SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public Object get(int field$) {
    switch (field$) {
    case 0: return caseId;
    case 1: return personId;
    case 2: return correlationId;
    case 3: return originator;
    case 4: return rmLocation;
    case 5: return bookingCentre;
    case 6: return name;
    case 7: return familyBackground;
    case 8: return remarks;
    case 9: return additionalRelatedNames;
    case 10: return AKANames;
    case 11: return aliazingNames;
    case 12: return SOW;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: caseId = (CharSequence)value$; break;
    case 1: personId = (CharSequence)value$; break;
    case 2: correlationId = (CharSequence)value$; break;
    case 3: originator = (CharSequence)value$; break;
    case 4: rmLocation = (CharSequence)value$; break;
    case 5: bookingCentre = (CharSequence)value$; break;
    case 6: name = (CharSequence)value$; break;
    case 7: familyBackground = (CharSequence)value$; break;
    case 8: remarks = (java.util.List<CharSequence>)value$; break;
    case 9: additionalRelatedNames = (java.util.List<CharSequence>)value$; break;
    case 10: AKANames = (CharSequence)value$; break;
    case 11: aliazingNames = (CharSequence)value$; break;
    case 12: SOW = (SOWAvro)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'caseId' field.
   * @return The value of the 'caseId' field.
   */
  public CharSequence getCaseId() {
    return caseId;
  }


  /**
   * Sets the value of the 'caseId' field.
   * @param value the value to set.
   */
  public void setCaseId(CharSequence value) {
    this.caseId = value;
  }

  /**
   * Gets the value of the 'personId' field.
   * @return The value of the 'personId' field.
   */
  public CharSequence getPersonId() {
    return personId;
  }


  /**
   * Sets the value of the 'personId' field.
   * @param value the value to set.
   */
  public void setPersonId(CharSequence value) {
    this.personId = value;
  }

  /**
   * Gets the value of the 'correlationId' field.
   * @return The value of the 'correlationId' field.
   */
  public CharSequence getCorrelationId() {
    return correlationId;
  }


  /**
   * Sets the value of the 'correlationId' field.
   * @param value the value to set.
   */
  public void setCorrelationId(CharSequence value) {
    this.correlationId = value;
  }

  /**
   * Gets the value of the 'originator' field.
   * @return The value of the 'originator' field.
   */
  public CharSequence getOriginator() {
    return originator;
  }


  /**
   * Sets the value of the 'originator' field.
   * @param value the value to set.
   */
  public void setOriginator(CharSequence value) {
    this.originator = value;
  }

  /**
   * Gets the value of the 'rmLocation' field.
   * @return The value of the 'rmLocation' field.
   */
  public CharSequence getRmLocation() {
    return rmLocation;
  }


  /**
   * Sets the value of the 'rmLocation' field.
   * @param value the value to set.
   */
  public void setRmLocation(CharSequence value) {
    this.rmLocation = value;
  }

  /**
   * Gets the value of the 'bookingCentre' field.
   * @return The value of the 'bookingCentre' field.
   */
  public CharSequence getBookingCentre() {
    return bookingCentre;
  }


  /**
   * Sets the value of the 'bookingCentre' field.
   * @param value the value to set.
   */
  public void setBookingCentre(CharSequence value) {
    this.bookingCentre = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'familyBackground' field.
   * @return The value of the 'familyBackground' field.
   */
  public CharSequence getFamilyBackground() {
    return familyBackground;
  }


  /**
   * Sets the value of the 'familyBackground' field.
   * @param value the value to set.
   */
  public void setFamilyBackground(CharSequence value) {
    this.familyBackground = value;
  }

  /**
   * Gets the value of the 'remarks' field.
   * @return The value of the 'remarks' field.
   */
  public java.util.List<CharSequence> getRemarks() {
    return remarks;
  }


  /**
   * Sets the value of the 'remarks' field.
   * @param value the value to set.
   */
  public void setRemarks(java.util.List<CharSequence> value) {
    this.remarks = value;
  }

  /**
   * Gets the value of the 'additionalRelatedNames' field.
   * @return The value of the 'additionalRelatedNames' field.
   */
  public java.util.List<CharSequence> getAdditionalRelatedNames() {
    return additionalRelatedNames;
  }


  /**
   * Sets the value of the 'additionalRelatedNames' field.
   * @param value the value to set.
   */
  public void setAdditionalRelatedNames(java.util.List<CharSequence> value) {
    this.additionalRelatedNames = value;
  }

  /**
   * Gets the value of the 'AKANames' field.
   * @return The value of the 'AKANames' field.
   */
  public CharSequence getAKANames() {
    return AKANames;
  }


  /**
   * Sets the value of the 'AKANames' field.
   * @param value the value to set.
   */
  public void setAKANames(CharSequence value) {
    this.AKANames = value;
  }

  /**
   * Gets the value of the 'aliazingNames' field.
   * @return The value of the 'aliazingNames' field.
   */
  public CharSequence getAliazingNames() {
    return aliazingNames;
  }


  /**
   * Sets the value of the 'aliazingNames' field.
   * @param value the value to set.
   */
  public void setAliazingNames(CharSequence value) {
    this.aliazingNames = value;
  }

  /**
   * Gets the value of the 'SOW' field.
   * @return The value of the 'SOW' field.
   */
  public SOWAvro getSOW() {
    return SOW;
  }


  /**
   * Sets the value of the 'SOW' field.
   * @param value the value to set.
   */
  public void setSOW(SOWAvro value) {
    this.SOW = value;
  }

  /**
   * Creates a new AdditionalNameRequestAvro RecordBuilder.
   * @return A new AdditionalNameRequestAvro RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new AdditionalNameRequestAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AdditionalNameRequestAvro RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * Creates a new AdditionalNameRequestAvro RecordBuilder by copying an existing AdditionalNameRequestAvro instance.
   * @param other The existing instance to copy.
   * @return A new AdditionalNameRequestAvro RecordBuilder
   */
  public static Builder newBuilder(AdditionalNameRequestAvro other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * RecordBuilder for AdditionalNameRequestAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AdditionalNameRequestAvro>
    implements org.apache.avro.data.RecordBuilder<AdditionalNameRequestAvro> {

    private CharSequence caseId;
    private CharSequence personId;
    private CharSequence correlationId;
    private CharSequence originator;
    private CharSequence rmLocation;
    private CharSequence bookingCentre;
    private CharSequence name;
    private CharSequence familyBackground;
    private java.util.List<CharSequence> remarks;
    private java.util.List<CharSequence> additionalRelatedNames;
    private CharSequence AKANames;
    private CharSequence aliazingNames;
    private SOWAvro SOW;
    private SOWAvro.Builder SOWBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.caseId)) {
        this.caseId = data().deepCopy(fields()[0].schema(), other.caseId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.personId)) {
        this.personId = data().deepCopy(fields()[1].schema(), other.personId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[2].schema(), other.correlationId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.originator)) {
        this.originator = data().deepCopy(fields()[3].schema(), other.originator);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.rmLocation)) {
        this.rmLocation = data().deepCopy(fields()[4].schema(), other.rmLocation);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.bookingCentre)) {
        this.bookingCentre = data().deepCopy(fields()[5].schema(), other.bookingCentre);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.name)) {
        this.name = data().deepCopy(fields()[6].schema(), other.name);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.familyBackground)) {
        this.familyBackground = data().deepCopy(fields()[7].schema(), other.familyBackground);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.remarks)) {
        this.remarks = data().deepCopy(fields()[8].schema(), other.remarks);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.additionalRelatedNames)) {
        this.additionalRelatedNames = data().deepCopy(fields()[9].schema(), other.additionalRelatedNames);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.AKANames)) {
        this.AKANames = data().deepCopy(fields()[10].schema(), other.AKANames);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.aliazingNames)) {
        this.aliazingNames = data().deepCopy(fields()[11].schema(), other.aliazingNames);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.SOW)) {
        this.SOW = data().deepCopy(fields()[12].schema(), other.SOW);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasSOWBuilder()) {
        this.SOWBuilder = SOWAvro.newBuilder(other.getSOWBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing AdditionalNameRequestAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(AdditionalNameRequestAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.caseId)) {
        this.caseId = data().deepCopy(fields()[0].schema(), other.caseId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.personId)) {
        this.personId = data().deepCopy(fields()[1].schema(), other.personId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[2].schema(), other.correlationId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.originator)) {
        this.originator = data().deepCopy(fields()[3].schema(), other.originator);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rmLocation)) {
        this.rmLocation = data().deepCopy(fields()[4].schema(), other.rmLocation);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bookingCentre)) {
        this.bookingCentre = data().deepCopy(fields()[5].schema(), other.bookingCentre);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.name)) {
        this.name = data().deepCopy(fields()[6].schema(), other.name);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.familyBackground)) {
        this.familyBackground = data().deepCopy(fields()[7].schema(), other.familyBackground);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.remarks)) {
        this.remarks = data().deepCopy(fields()[8].schema(), other.remarks);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.additionalRelatedNames)) {
        this.additionalRelatedNames = data().deepCopy(fields()[9].schema(), other.additionalRelatedNames);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.AKANames)) {
        this.AKANames = data().deepCopy(fields()[10].schema(), other.AKANames);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.aliazingNames)) {
        this.aliazingNames = data().deepCopy(fields()[11].schema(), other.aliazingNames);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.SOW)) {
        this.SOW = data().deepCopy(fields()[12].schema(), other.SOW);
        fieldSetFlags()[12] = true;
      }
      this.SOWBuilder = null;
    }

    /**
      * Gets the value of the 'caseId' field.
      * @return The value.
      */
    public CharSequence getCaseId() {
      return caseId;
    }


    /**
      * Sets the value of the 'caseId' field.
      * @param value The value of 'caseId'.
      * @return This builder.
      */
    public Builder setCaseId(CharSequence value) {
      validate(fields()[0], value);
      this.caseId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'caseId' field has been set.
      * @return True if the 'caseId' field has been set, false otherwise.
      */
    public boolean hasCaseId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'caseId' field.
      * @return This builder.
      */
    public Builder clearCaseId() {
      caseId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'personId' field.
      * @return The value.
      */
    public CharSequence getPersonId() {
      return personId;
    }


    /**
      * Sets the value of the 'personId' field.
      * @param value The value of 'personId'.
      * @return This builder.
      */
    public Builder setPersonId(CharSequence value) {
      validate(fields()[1], value);
      this.personId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'personId' field has been set.
      * @return True if the 'personId' field has been set, false otherwise.
      */
    public boolean hasPersonId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'personId' field.
      * @return This builder.
      */
    public Builder clearPersonId() {
      personId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlationId' field.
      * @return The value.
      */
    public CharSequence getCorrelationId() {
      return correlationId;
    }


    /**
      * Sets the value of the 'correlationId' field.
      * @param value The value of 'correlationId'.
      * @return This builder.
      */
    public Builder setCorrelationId(CharSequence value) {
      validate(fields()[2], value);
      this.correlationId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationId' field has been set.
      * @return True if the 'correlationId' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'correlationId' field.
      * @return This builder.
      */
    public Builder clearCorrelationId() {
      correlationId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'originator' field.
      * @return The value.
      */
    public CharSequence getOriginator() {
      return originator;
    }


    /**
      * Sets the value of the 'originator' field.
      * @param value The value of 'originator'.
      * @return This builder.
      */
    public Builder setOriginator(CharSequence value) {
      validate(fields()[3], value);
      this.originator = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'originator' field has been set.
      * @return True if the 'originator' field has been set, false otherwise.
      */
    public boolean hasOriginator() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'originator' field.
      * @return This builder.
      */
    public Builder clearOriginator() {
      originator = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'rmLocation' field.
      * @return The value.
      */
    public CharSequence getRmLocation() {
      return rmLocation;
    }


    /**
      * Sets the value of the 'rmLocation' field.
      * @param value The value of 'rmLocation'.
      * @return This builder.
      */
    public Builder setRmLocation(CharSequence value) {
      validate(fields()[4], value);
      this.rmLocation = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'rmLocation' field has been set.
      * @return True if the 'rmLocation' field has been set, false otherwise.
      */
    public boolean hasRmLocation() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'rmLocation' field.
      * @return This builder.
      */
    public Builder clearRmLocation() {
      rmLocation = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bookingCentre' field.
      * @return The value.
      */
    public CharSequence getBookingCentre() {
      return bookingCentre;
    }


    /**
      * Sets the value of the 'bookingCentre' field.
      * @param value The value of 'bookingCentre'.
      * @return This builder.
      */
    public Builder setBookingCentre(CharSequence value) {
      validate(fields()[5], value);
      this.bookingCentre = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingCentre' field has been set.
      * @return True if the 'bookingCentre' field has been set, false otherwise.
      */
    public boolean hasBookingCentre() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'bookingCentre' field.
      * @return This builder.
      */
    public Builder clearBookingCentre() {
      bookingCentre = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public Builder setName(CharSequence value) {
      validate(fields()[6], value);
      this.name = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public Builder clearName() {
      name = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'familyBackground' field.
      * @return The value.
      */
    public CharSequence getFamilyBackground() {
      return familyBackground;
    }


    /**
      * Sets the value of the 'familyBackground' field.
      * @param value The value of 'familyBackground'.
      * @return This builder.
      */
    public Builder setFamilyBackground(CharSequence value) {
      validate(fields()[7], value);
      this.familyBackground = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'familyBackground' field has been set.
      * @return True if the 'familyBackground' field has been set, false otherwise.
      */
    public boolean hasFamilyBackground() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'familyBackground' field.
      * @return This builder.
      */
    public Builder clearFamilyBackground() {
      familyBackground = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'remarks' field.
      * @return The value.
      */
    public java.util.List<CharSequence> getRemarks() {
      return remarks;
    }


    /**
      * Sets the value of the 'remarks' field.
      * @param value The value of 'remarks'.
      * @return This builder.
      */
    public Builder setRemarks(java.util.List<CharSequence> value) {
      validate(fields()[8], value);
      this.remarks = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'remarks' field has been set.
      * @return True if the 'remarks' field has been set, false otherwise.
      */
    public boolean hasRemarks() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'remarks' field.
      * @return This builder.
      */
    public Builder clearRemarks() {
      remarks = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'additionalRelatedNames' field.
      * @return The value.
      */
    public java.util.List<CharSequence> getAdditionalRelatedNames() {
      return additionalRelatedNames;
    }


    /**
      * Sets the value of the 'additionalRelatedNames' field.
      * @param value The value of 'additionalRelatedNames'.
      * @return This builder.
      */
    public Builder setAdditionalRelatedNames(java.util.List<CharSequence> value) {
      validate(fields()[9], value);
      this.additionalRelatedNames = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'additionalRelatedNames' field has been set.
      * @return True if the 'additionalRelatedNames' field has been set, false otherwise.
      */
    public boolean hasAdditionalRelatedNames() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'additionalRelatedNames' field.
      * @return This builder.
      */
    public Builder clearAdditionalRelatedNames() {
      additionalRelatedNames = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'AKANames' field.
      * @return The value.
      */
    public CharSequence getAKANames() {
      return AKANames;
    }


    /**
      * Sets the value of the 'AKANames' field.
      * @param value The value of 'AKANames'.
      * @return This builder.
      */
    public Builder setAKANames(CharSequence value) {
      validate(fields()[10], value);
      this.AKANames = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'AKANames' field has been set.
      * @return True if the 'AKANames' field has been set, false otherwise.
      */
    public boolean hasAKANames() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'AKANames' field.
      * @return This builder.
      */
    public Builder clearAKANames() {
      AKANames = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'aliazingNames' field.
      * @return The value.
      */
    public CharSequence getAliazingNames() {
      return aliazingNames;
    }


    /**
      * Sets the value of the 'aliazingNames' field.
      * @param value The value of 'aliazingNames'.
      * @return This builder.
      */
    public Builder setAliazingNames(CharSequence value) {
      validate(fields()[11], value);
      this.aliazingNames = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'aliazingNames' field has been set.
      * @return True if the 'aliazingNames' field has been set, false otherwise.
      */
    public boolean hasAliazingNames() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'aliazingNames' field.
      * @return This builder.
      */
    public Builder clearAliazingNames() {
      aliazingNames = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'SOW' field.
      * @return The value.
      */
    public SOWAvro getSOW() {
      return SOW;
    }


    /**
      * Sets the value of the 'SOW' field.
      * @param value The value of 'SOW'.
      * @return This builder.
      */
    public Builder setSOW(SOWAvro value) {
      validate(fields()[12], value);
      this.SOWBuilder = null;
      this.SOW = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'SOW' field has been set.
      * @return True if the 'SOW' field has been set, false otherwise.
      */
    public boolean hasSOW() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'SOW' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public SOWAvro.Builder getSOWBuilder() {
      if (SOWBuilder == null) {
        if (hasSOW()) {
          setSOWBuilder(SOWAvro.newBuilder(SOW));
        } else {
          setSOWBuilder(SOWAvro.newBuilder());
        }
      }
      return SOWBuilder;
    }

    /**
     * Sets the Builder instance for the 'SOW' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public Builder setSOWBuilder(SOWAvro.Builder value) {
      clearSOW();
      SOWBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'SOW' field has an active Builder instance
     * @return True if the 'SOW' field has an active Builder instance
     */
    public boolean hasSOWBuilder() {
      return SOWBuilder != null;
    }

    /**
      * Clears the value of the 'SOW' field.
      * @return This builder.
      */
    public Builder clearSOW() {
      SOW = null;
      SOWBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AdditionalNameRequestAvro build() {
      try {
        AdditionalNameRequestAvro record = new AdditionalNameRequestAvro();
        record.caseId = fieldSetFlags()[0] ? this.caseId : (CharSequence) defaultValue(fields()[0]);
        record.personId = fieldSetFlags()[1] ? this.personId : (CharSequence) defaultValue(fields()[1]);
        record.correlationId = fieldSetFlags()[2] ? this.correlationId : (CharSequence) defaultValue(fields()[2]);
        record.originator = fieldSetFlags()[3] ? this.originator : (CharSequence) defaultValue(fields()[3]);
        record.rmLocation = fieldSetFlags()[4] ? this.rmLocation : (CharSequence) defaultValue(fields()[4]);
        record.bookingCentre = fieldSetFlags()[5] ? this.bookingCentre : (CharSequence) defaultValue(fields()[5]);
        record.name = fieldSetFlags()[6] ? this.name : (CharSequence) defaultValue(fields()[6]);
        record.familyBackground = fieldSetFlags()[7] ? this.familyBackground : (CharSequence) defaultValue(fields()[7]);
        record.remarks = fieldSetFlags()[8] ? this.remarks : (java.util.List<CharSequence>) defaultValue(fields()[8]);
        record.additionalRelatedNames = fieldSetFlags()[9] ? this.additionalRelatedNames : (java.util.List<CharSequence>) defaultValue(fields()[9]);
        record.AKANames = fieldSetFlags()[10] ? this.AKANames : (CharSequence) defaultValue(fields()[10]);
        record.aliazingNames = fieldSetFlags()[11] ? this.aliazingNames : (CharSequence) defaultValue(fields()[11]);
        if (SOWBuilder != null) {
          try {
            record.SOW = this.SOWBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("SOW"));
            throw e;
          }
        } else {
          record.SOW = fieldSetFlags()[12] ? this.SOW : (SOWAvro) defaultValue(fields()[12]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AdditionalNameRequestAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<AdditionalNameRequestAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AdditionalNameRequestAvro>
    READER$ = (org.apache.avro.io.DatumReader<AdditionalNameRequestAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.caseId);

    out.writeString(this.personId);

    out.writeString(this.correlationId);

    out.writeString(this.originator);

    out.writeString(this.rmLocation);

    out.writeString(this.bookingCentre);

    out.writeString(this.name);

    if (this.familyBackground == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.familyBackground);
    }

    long size0 = this.remarks.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (CharSequence e0: this.remarks) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.additionalRelatedNames.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (CharSequence e1: this.additionalRelatedNames) {
      actualSize1++;
      out.startItem();
      out.writeString(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    if (this.AKANames == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.AKANames);
    }

    if (this.aliazingNames == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.aliazingNames);
    }

    if (this.SOW == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.SOW.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.caseId = in.readString(this.caseId instanceof Utf8 ? (Utf8)this.caseId : null);

      this.personId = in.readString(this.personId instanceof Utf8 ? (Utf8)this.personId : null);

      this.correlationId = in.readString(this.correlationId instanceof Utf8 ? (Utf8)this.correlationId : null);

      this.originator = in.readString(this.originator instanceof Utf8 ? (Utf8)this.originator : null);

      this.rmLocation = in.readString(this.rmLocation instanceof Utf8 ? (Utf8)this.rmLocation : null);

      this.bookingCentre = in.readString(this.bookingCentre instanceof Utf8 ? (Utf8)this.bookingCentre : null);

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.familyBackground = null;
      } else {
        this.familyBackground = in.readString(this.familyBackground instanceof Utf8 ? (Utf8)this.familyBackground : null);
      }

      long size0 = in.readArrayStart();
      java.util.List<CharSequence> a0 = this.remarks;
      if (a0 == null) {
        a0 = new SpecificData.Array<CharSequence>((int)size0, SCHEMA$.getField("remarks").schema());
        this.remarks = a0;
      } else a0.clear();
      SpecificData.Array<CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<CharSequence> a1 = this.additionalRelatedNames;
      if (a1 == null) {
        a1 = new SpecificData.Array<CharSequence>((int)size1, SCHEMA$.getField("additionalRelatedNames").schema());
        this.additionalRelatedNames = a1;
      } else a1.clear();
      SpecificData.Array<CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<CharSequence>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          CharSequence e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
          a1.add(e1);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.AKANames = null;
      } else {
        this.AKANames = in.readString(this.AKANames instanceof Utf8 ? (Utf8)this.AKANames : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.aliazingNames = null;
      } else {
        this.aliazingNames = in.readString(this.aliazingNames instanceof Utf8 ? (Utf8)this.aliazingNames : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SOW = null;
      } else {
        if (this.SOW == null) {
          this.SOW = new SOWAvro();
        }
        this.SOW.customDecode(in);
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.caseId = in.readString(this.caseId instanceof Utf8 ? (Utf8)this.caseId : null);
          break;

        case 1:
          this.personId = in.readString(this.personId instanceof Utf8 ? (Utf8)this.personId : null);
          break;

        case 2:
          this.correlationId = in.readString(this.correlationId instanceof Utf8 ? (Utf8)this.correlationId : null);
          break;

        case 3:
          this.originator = in.readString(this.originator instanceof Utf8 ? (Utf8)this.originator : null);
          break;

        case 4:
          this.rmLocation = in.readString(this.rmLocation instanceof Utf8 ? (Utf8)this.rmLocation : null);
          break;

        case 5:
          this.bookingCentre = in.readString(this.bookingCentre instanceof Utf8 ? (Utf8)this.bookingCentre : null);
          break;

        case 6:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.familyBackground = null;
          } else {
            this.familyBackground = in.readString(this.familyBackground instanceof Utf8 ? (Utf8)this.familyBackground : null);
          }
          break;

        case 8:
          long size0 = in.readArrayStart();
          java.util.List<CharSequence> a0 = this.remarks;
          if (a0 == null) {
            a0 = new SpecificData.Array<CharSequence>((int)size0, SCHEMA$.getField("remarks").schema());
            this.remarks = a0;
          } else a0.clear();
          SpecificData.Array<CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 9:
          long size1 = in.readArrayStart();
          java.util.List<CharSequence> a1 = this.additionalRelatedNames;
          if (a1 == null) {
            a1 = new SpecificData.Array<CharSequence>((int)size1, SCHEMA$.getField("additionalRelatedNames").schema());
            this.additionalRelatedNames = a1;
          } else a1.clear();
          SpecificData.Array<CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<CharSequence>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              CharSequence e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
              a1.add(e1);
            }
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.AKANames = null;
          } else {
            this.AKANames = in.readString(this.AKANames instanceof Utf8 ? (Utf8)this.AKANames : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.aliazingNames = null;
          } else {
            this.aliazingNames = in.readString(this.aliazingNames instanceof Utf8 ? (Utf8)this.aliazingNames : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SOW = null;
          } else {
            if (this.SOW == null) {
              this.SOW = new SOWAvro();
            }
            this.SOW.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










